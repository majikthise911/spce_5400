{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Here is the full LaTeX code for the Chapter 4 notes, generated via Python for proper structure. To turn this into a PDF:\
\
1. Copy the entire code below.\
2. Paste it into an online LaTeX editor like Overleaf (https://www.overleaf.com) \'96 create a free account if needed, start a new project, and replace the default code with this.\
3. Compile it (click "Recompile" or similar) \'96 Overleaf will handle the LaTeX rendering, including equations, and generate a downloadable PDF.\
4. If you have LaTeX installed locally (e.g., via TeX Live or MiKTeX), save this as a .tex file and run `pdflatex filename.tex` in your terminal.\
\
This will give you a formatted PDF with proper math notation, sections, and code snippets. If you need adjustments (e.g., adding images for the sketches), let me know.\
\
```\
\\documentclass\{article\}\
\\usepackage\{amsmath\}\
\\usepackage\{geometry\}\
\\usepackage\{listings\}\
\\usepackage\{xcolor\}\
\\usepackage\{graphicx\}\
\\usepackage\{hyperref\}\
\
\\geometry\{margin=1in\}\
\\lstset\{\
  language=Python,\
  basicstyle=\\small\\ttfamily,\
  keywordstyle=\\color\{blue\},\
  stringstyle=\\color\{red\},\
  commentstyle=\\color\{green!60!black\},\
  breaklines=true,\
  showstringspaces=false\
\}\
\
\\title\{Chapter 4: Horizon Plane and Communication Duration\}\
\\author\{Summarized Notes\}\
\\date\{October 11, 2025\}\
\
\\begin\{document\}\
\
\\maketitle\
\
\\tableofcontents\
\
\\newpage\
\
\\section\{4.1 LEO Satellite Tracking Principles\}\
\
\\subsection\{Executive Summary\}\
Building on orbital mechanics from Chapter 1, this subsection introduces Kepler's laws (three principles describing planetary motion: orbits are ellipses, equal areas in equal times, and \\( T^2 \\propto a^3 \\)) and Newton's law of universal gravitation (force \\( F = G \\frac\{m_1 m_2\}\{r^2\} \\), where \\( G \\) is the gravitational constant) to explain Low Earth Orbit (LEO; orbits 200-2000 km altitude) satellite motion, defining key parameters for tracking and communication, essential for ground station design to predict and follow satellite paths accurately.\
\
\\subsection\{Key Takeaways (80/20 Insights)\}\
\\begin\{itemize\}\
\\item \\textbf\{Motion Equation and Trajectory\}: Satellite movement follows the differential equation \\( \\frac\{d^2 \\mathbf\{r\}\}\{dt^2\} + \\frac\{\\mu\}\{r^3\} \\mathbf\{r\} = 0 \\), where \\( \\mathbf\{r\} \\) is the position vector from Earth's center, \\( r = |\\mathbf\{r\}| \\), and \\( \\mu = G M \\) (gravitational parameter, \\( M \\) Earth mass) yielding elliptical orbits with Earth at one focus; for LEO, circular orbits (eccentricity \\( e = 0 \\)) simplify to constant velocity \\( v = \\sqrt\{\\mu / r\} \\), linking to noise models in Chapter 3.\
\\item \\textbf\{Orbital Parameters\}: Semi-major axis \\( a \\) (half the major axis of the ellipse, equals radius for circular orbits) determines period \\( T = 2\\pi \\sqrt\{a^3 / \\mu\} \\) and daily passes \\( n = T_\{\\text\{sideral\}\} / T \\) (sidereal day \\( T_\{\\text\{sideral\}\} \\approx 86164 \\) s, Earth's rotation relative to stars); eccentricity \\( e = (r_a - r_p)/(r_a + r_p) \\) where \\( r_a \\) apogee (farthest point), \\( r_p \\) perigee (closest point); inclination \\( i \\) (tilt of orbital plane to Earth's equator); Right Ascension of Ascending Node (RAAN, \\( \\Omega \\)) orients the ascending node (equator crossing northward) to vernal equinox (Sun's position at spring equinox).\
\\item \\textbf\{Argument of Perigee \\( \\omega \\) and True Anomaly \\( \\theta \\)\}: \\( \\omega \\) positions perigee in the orbital plane; \\( \\theta \\) (or \\( \\nu \\)) locates satellite from perigee; these enable prediction of azimuth (Az; horizontal angle from north) and elevation (El; vertical angle above horizon) for antenna pointing, interleaving with horizon concepts in 4.2.\
\\item \\textbf\{Tracking Software Functions\}: Includes telemetry (satellite health/data transmission), command/control (sending instructions), database (storing parameters), analysis (processing logs); uses Keplerian elements (six parameters: \\( a, e, i, \\Omega, \\omega, \\theta \\)) to predict Acquisition of Signal (AOS; start of contact) and Loss of Signal (LOS; end of contact), control rotors (motors for antenna rotation); radar maps (2D projections of satellite ground track) show path for real-time operations.\
\\item \\textbf\{Practical Implications\}: For Multispectral Optical Science Telescope (MOST; example LEO satellite for astronomy) at H~830 km, \\( v \\approx 7.43 \\) km/s, \\( T \\approx 101 \\) min, \\( n \\approx 14.2 \\) passes/day; professionals use software for acquisition a few minutes early to ensure lock (stable signal connection), critical for data transfer efficiency.\
\\end\{itemize\}\
\
\\subsection\{Important Equations\}\
\\begin\{enumerate\}\
\\item \\textbf\{Motion Equation\}: \\( \\frac\{d^2 \\mathbf\{r\}\}\{dt^2\} + \\frac\{\\mu\}\{r^3\} \\mathbf\{r\} = 0 \\), where \\( \\mathbf\{r\} \\) is position vector, \\( \\mu = GM = 3.986 \\times 10^\{14\} \\) m\'b3/s\'b2; describes trajectory; example: for circular, balances centripetal force.\
\\item \\textbf\{Velocity in Circular Orbit\}: \\( v = \\sqrt\{\\mu / r\} \\), \\( r = H + R_E \\) (\\( R_E = 6378 \\) km Earth radius); represents speed; example: H=830 km, \\( v = 7.43 \\) km/s.\
\\item \\textbf\{Orbital Period\}: \\( T = 2\\pi \\sqrt\{a^3 / \\mu\} \\), \\( a = r \\) for circular; time for one orbit; example: \\( a = 7208 \\) km, \\( T = 6085 \\) s (~101 min).\
\\item \\textbf\{Daily Passes\}: \\( n = T_\{\\text\{sideral\}\} / T \\), \\( T_\{\\text\{sideral\}\} = 86164 \\) s; number of orbits per sidereal day; example: \\( T = 6085 \\) s, \\( n = 14.16 \\).\
\\end\{enumerate\}\
\
\\subsection\{Supporting Details\}\
- Examples: MOST tracking at Vienna station uses Graphical User Interface (GUI; interactive software screen) for operations, radar maps for visualization; real-world trades: higher \\( i \\) (polar orbits near 90\'b0) increases global coverage but complicates tracking vs. equatorial (\\( i = 0^\\circ \\)).\
- Applications: Parameters predict visibility for remote sensing (Earth observation); cross-references constellation design in Chapter 5 for handover (switching satellites).\
- Trades: Circular orbits simplify calculations but limit flexibility vs. elliptical (varying altitude); software must handle perturbations (small orbit deviations due to drag/gravity) for accuracy.\
\
\\subsection\{Simplified Analogy\}\
Think of a satellite as a ball thrown in a circular path around a central post (Earth): the rope length (\\( r \\)) sets speed and lap time; tracking is like aiming a camera using predicted angles (\\( i, \\Omega, \\omega, \\theta \\)). Verbalize aloud: "The ball circles faster closer to the post, just like LEO satellites at lower altitudes."\
\
\\subsection\{Visual Aid Suggestion\}\
- Sketch: Elliptical orbit with perigee/apogee, nodes, \\( i \\) as tilt, \\( \\Omega \\) as rotation, \\( \\omega \\) as perigee angle, \\( \\theta \\) as position.\
- Graph: Plot altitude H (600-1200 km) vs. period T (min); key points: H=600 km T~96 min, H=1200 km T~109 min.\
- Python Code Snippet:\
\\begin\{lstlisting\}\
import matplotlib.pyplot as plt\
import numpy as np\
mu = 3.986e14  # m3/s2\
Re = 6378000  # m\
h = np.linspace(600000, 1200000, 7)\
a = Re + h\
t = 2 * np.pi * np.sqrt(a**3 / mu) / 60  # min\
plt.plot(h/1000, t, marker='o')\
plt.xlabel('Altitude (km)')\
plt.ylabel('Period (min)')\
plt.title('Orbital Period vs. Altitude')\
plt.grid(True)\
plt.show()\
\\end\{lstlisting\}\
\
\\subsection\{Retention Aid\}\
Mnemonic Recap: "All Elephants In Orbit Really Twist" (\\( a, e, i, \\Omega, r, \\theta \\)). Dual-code by drawing orbit while verbalizing: "Circle tight for fast laps." Interleave: Link velocity to Doppler shift (frequency change due to motion) in Chapter 8. Multisensory: Say equations aloud in 90-min session with breaks. Spaced repetition: Review in 24 hours, quizzes in 1 week.\
\
Self-Quiz Questions:\
1. Multiple-Choice: What parameter tilts the orbital plane? (a) Eccentricity, (b) Inclination, (c) True anomaly. Answer: (b) Inclination.\
2. Fill-in: Orbital period \\( T = 2\\pi \\sqrt\{___ / \\mu\} \\). Answer: \\( a^3 \\).\
3. Application: For H=800 km, calculate v (km/s) if \\( \\mu = 3.986 \\times 10^5 \\) km\'b3/s\'b2, r=7178 km. Answer: ~7.46 (\\( v = \\sqrt\{\\mu / r\} \\)).\
4. What: Explain why circular orbits are preferred for LEO. Answer: Constant velocity/altitude simplifies tracking/communication.\
5. Calculate: Daily passes for T=100 min (\\( T_\{\\text\{sideral\}\} \\approx 1440 \\) min). Answer: ~14.4.\
\
\\newpage\
\
\\section\{4.2 Ideal Horizon Plane and Communication Duration with LEO Satellites\}\
\
\\subsection\{Executive Summary\}\
Extending tracking from 4.1, this subsection defines the ideal horizon plane (theoretical visibility circle at 0\'b0 elevation with no barriers) for maximum visibility, calculating communication duration based on satellite path and Max-El (maximum elevation; peak angle during pass), crucial for optimizing data transfer in LEO systems.\
\
\\subsection\{Key Takeaways (80/20 Insights)\}\
\\begin\{itemize\}\
\\item \\textbf\{Ideal Horizon Plane\}: Flat circle at minimum elevation \\( \\epsilon_0 = 0^\\circ \\), diameter 6000-8000 km; AOS/LOS at horizon edges determine visibility; links to practical adjustments in 4.4.\
\\item \\textbf\{Communication Duration\}: Ideal duration \\( t_\{\\text\{ideal\}\} = \\) LOS time - AOS time, depends on Max-El; higher Max-El (e.g., 90\'b0) gives ~15 min, low (e.g., 5\'b0) ~8 min; interleaves with power needs in 4.7.\
\\item \\textbf\{Path Projection\}: Radar map shows curved ground track from AOS (Az) to LOS (Az); parameters like Max-El dictate duration; for MOST, records show variability.\
\\item \\textbf\{Altitude Impact\}: Higher H lengthens duration (e.g., H=1200 km > H=600 km at same Max-El); professionals use for pass prediction.\
\\item \\textbf\{Implications\}: Ideal duration assumes no barriers; real is shorter, informing designed plane in 4.6 for reliability.\
\\end\{itemize\}\
\
\\subsection\{Important Equations\}\
\\begin\{enumerate\}\
\\item \\textbf\{Duration\}: \\( t_\{\\text\{ideal\}\} = t_\{\\text\{LOS\}\} - t_\{\\text\{AOS\}\} \\); time from horizon to horizon; example: Max-El=84\'b0 \\( t = 15:21 \\) min.\
\\item \\textbf\{Slant Range d\}: \\( d = R_E \\sqrt\{(H/R_E + 1)^2 - \\cos^2 \\epsilon_0\} - \\sin \\epsilon_0 \\); at \\( \\epsilon_0 = 0^\\circ \\), \\( d_\{\\max\} = \\sqrt\{H(2R_E + H)\} \\); radius of plane.\
\\item \\textbf\{Elevation Function\}: \\( \\sin \\epsilon_0 = [H(H + 2R_E) - d^2] / (2d R_E) \\); inverts distance to elevation.\
\\item \\textbf\{Plane Width\}: \\( D = 2 d_\{\\max\} \\); diameter; example: H=800 km D~6579 km.\
\\end\{enumerate\}\
\
\\subsection\{Supporting Details\}\
- Examples: MOST passes: orbit 2235 Max-El=84\'b0 t=15:21, orbit 2467 Max-El=6\'b0 t=9:38; trades: longer duration vs. higher path loss (signal weakening over distance) at low El.\
- Applications: Predict data volume; cross-references attenuation (signal loss) at low El in Chapter 2.\
- Trades: High Max-El maximizes t but rarer; low H shortens t but stronger signal.\
\
\\subsection\{Simplified Analogy\}\
Satellite pass is like a plane flying over: horizon plane is runway edges (AOS/LOS); Max-El is peak altitude overhead for longest view. Verbalize aloud: "Plane highest overhead stays visible longer, like high Max-El extends talk time."\
\
\\subsection\{Visual Aid Suggestion\}\
- Sketch: Radar map with curved path, labels AOS, Max-El, LOS.\
- Graph: Max-El (0-90\'b0) vs. t (min) for H=800 km; key: 90\'b0 t~15 min, 5\'b0 t~8 min.\
- Python Code Snippet:\
\\begin\{lstlisting\}\
import matplotlib.pyplot as plt\
import numpy as np\
max_el = np.arange(5, 91, 5)\
t_min = [8 + 7 * (e/90) for e in max_el]  # Approximate\
plt.plot(max_el, t_min, marker='o')\
plt.xlabel('Max-El (\'b0)')\
plt.ylabel('Duration (min)')\
plt.title('Duration vs. Max-El for H=800 km')\
plt.grid(True)\
plt.show()\
\\end\{lstlisting\}\
\
\\subsection\{Retention Aid\}\
Mnemonic Recap: "AOS Low, LOS Gone, Max-El Long" for events. Dual-code: Map path while saying "High peak, long speak." Interleave: Connect to tracking in 4.1. Multisensory: Trace path aloud. Spaced repetition: Review tomorrow, quizzes weekly.\
\
Self-Quiz Questions:\
1. Multiple-Choice: What maximizes ideal duration? (a) Low H, (b) High Max-El, (c) High e. Answer: (b) High Max-El.\
2. Fill-in: Ideal plane at \\( \\epsilon_0 = ___ \\). Answer: 0\'b0.\
3. Application: For H=800 km, \\( \\epsilon_0 = 0^\\circ \\) d~3294 km; calculate D. Answer: ~6588 km (\\( 2d \\)).\
4. What: Why is t variable per pass? Answer: Differs with Max-El/path.\
5. Calculate: Approx t for Max-El=45\'b0 if 90\'b0=15 min (linear approximation). Answer: ~7.5 min.\
\
\\newpage\
\
\\section\{4.3 The Range and Horizon Plane Simulation for Ground Stations of LEO Satellites\}\
\
\\subsection\{Executive Summary\}\
Following ideal plane in 4.2, this subsection simulates slant range (line-of-sight distance d) and plane dimensions for varying altitudes, showing how higher H expands horizon for longer communication, key for link budget (signal power accounting) planning.\
\
\\subsection\{Key Takeaways (80/20 Insights)\}\
\\begin\{itemize\}\
\\item \\textbf\{Slant Range Variation\}: d shortest at 90\'b0 (equals H), longest at 0\'b0 (\\( \\sqrt\{H(2R_E + H)\} \\)); increases with H; interleaves with loss in 4.8.\
\\item \\textbf\{Plane Dimension\}: Width D = \\( 2\\sqrt\{H(2R_E + H)\} \\); 6000-8000 km for H=600-1200 km; simulation confirms expansion with H.\
\\item \\textbf\{Elevation Impact\}: Higher \\( \\epsilon_0 \\) shortens d; table shows d decreases ~10-15\\% from 0\'b0 to 90\'b0.\
\\item \\textbf\{Simulation Method\}: Step H by 100 km, \\( \\epsilon_0 \\) by 10\'b0; professionals use for worst-case (0\'b0) budget.\
\\item \\textbf\{Implications\}: Larger plane with higher H increases visibility but weakens signal; trade for constellations in Chapter 5.\
\\end\{itemize\}\
\
\\subsection\{Important Equations\}\
\\begin\{enumerate\}\
\\item \\textbf\{Slant Range\}: \\( d = R_E [\\sqrt\{(H/R_E + 1)^2 - \\cos^2 \\epsilon_0\} - \\sin \\epsilon_0] \\); distance; example: H=800 km, \\( \\epsilon_0 = 0^\\circ \\) d=3289 km.\
\\item \\textbf\{Elevation from d\}: \\( \\sin \\epsilon_0 = [H(H + 2R_E) - d^2] / (2d R_E) \\); inverse.\
\\item \\textbf\{Plane Radius\}: \\( d_\{\\max\} = \\sqrt\{H(2R_E + H)\} \\); at 0\'b0.\
\\item \\textbf\{Width\}: \\( D = 2 d_\{\\max\} \\); diameter; example: H=800 km D=6578 km.\
\\end\{enumerate\}\
\
\\subsection\{Supporting Details\}\
- Examples: Table 4.1: H=600 km 90\'b0 d=600 km, 0\'b0 d=2830 km; trades: High H wider plane but higher loss.\
- Applications: Predict communication windows; cross-references duration in 4.2.\
- Trades: Low H short range/strong signal vs. high H more coverage.\
\
\\subsection\{Simplified Analogy\}\
Horizon plane is like view from hilltop: higher hill (H) widens horizon circle; range is hike distance. Verbalize aloud: "Taller hill sees farther, like higher orbit expands comm window."\
\
\\subsection\{Visual Aid Suggestion\}\
- Sketch: Triangle with \\( R_E \\), H, d, \\( \\epsilon_0 \\).\
- Graph: H (600-1200 km) vs. D (km) at 0\'b0; key: 600 km D=5660 km, 1200 km D=8176 km.\
- Python Code Snippet:\
\\begin\{lstlisting\}\
import matplotlib.pyplot as plt\
import numpy as np\
Re = 6371\
h = np.arange(600, 1300, 100)\
d_max = np.sqrt(h * (2*Re + h))\
D = 2 * d_max\
plt.plot(h, D, marker='o')\
plt.xlabel('Altitude (km)')\
plt.ylabel('Plane Width (km)')\
plt.title('Ideal Horizon Width vs. Altitude')\
plt.grid(True)\
plt.show()\
\\end\{lstlisting\}\
\
\\subsection\{Retention Aid\}\
Mnemonic Recap: "Double Root High Twice Radius" for \\( d_\{\\max\} \\). Dual-code: Draw triangle saying "Long d low El." Interleave: Link to 4.2 duration. Multisensory: Calculate aloud. Spaced repetition: Review equations daily.\
\
Self-Quiz Questions:\
1. Multiple-Choice: d min at? (a) 0\'b0, (b) 90\'b0. Answer: (b) 90\'b0.\
2. Fill-in: D = 2 ___. Answer: \\( d_\{\\max\} \\).\
3. Application: H=1000 km \\( d_\{\\max\} \\)? (\\( R_E = 6371 \\)). Answer: ~3708 km (\\( \\sqrt\{1000 \\times (12742 + 1000)\} \\)).\
4. What: Why higher H larger D? Answer: Wider tangent circle.\
5. Calculate: For H=600 km, \\( \\epsilon_0 = 30^\\circ \\) approx d (from table pattern). Answer: ~1070 km.\
\
\\newpage\
\
\\section\{4.4 Practical Horizon Plane for LEO Ground Stations\}\
\
\\subsection\{Executive Summary\}\
Contrasting ideal in 4.2, this subsection accounts for barriers (obstructions like trees/buildings) raising effective horizon to 1-4\'b0, forming broken plane (irregular visibility circle) and shortening duration, vital for urban stations to adjust tracking.\
\
\\subsection\{Key Takeaways (80/20 Insights)\}\
\\begin\{itemize\}\
\\item \\textbf\{Practical vs. Ideal\}: Barriers raise lock (signal acquisition) and unlock (signal loss) El to 1-4\'b0, creating broken circle; reduces visibility vs. ideal flat 0\'b0 plane; links to designed in 4.5.\
\\item \\textbf\{Events Impact\}: AOS/LOS at higher El shortens t; records show 2-4\'b0 average for Vienna.\
\\item \\textbf\{Azimuth Variation\}: Barriers differ by direction, distorting plane; simulation shows real t 80-95\\% of ideal.\
\\item \\textbf\{Urban Challenges\}: Low-cost stations hindered at low El; professionals record passes to map practical horizon.\
\\item \\textbf\{Implications\}: Real duration depends on lock El, not just Max-El; informs power savings in 4.7.\
\\end\{itemize\}\
\
\\subsection\{Important Equations\}\
\\begin\{enumerate\}\
\\item \\textbf\{Real Duration\}: \\( t_\{\\text\{real\}\} = t_\{\\text\{unlock\}\} - t_\{\\text\{lock\}\} \\); shorter than ideal.\
\\item \\textbf\{Lock El\}: Average 1-4\'b0 from records; example: orbit 2467 \\( t_\{\\text\{real\}\} = 5 \\) min vs. ideal 9:38.\
\\end\{enumerate\}\
\
\\subsection\{Supporting Details\}\
- Examples: MOST orbit 2467: lock 4\'b0 t_loss=4:38 min; trades: Urban higher practical El vs. open sites.\
- Applications: Adjust for Synthetic Aperture Radar (SAR; high-resolution imaging); cross-references simulation in 4.3.\
- Trades: Higher practical El reliable but shorter t.\
\
\\subsection\{Simplified Analogy\}\
Practical plane is fenced yard with trees: view blocked low, effective horizon raised. Verbalize aloud: "Trees hide low-flying plane, like barriers shorten satellite talk."\
\
\\subsection\{Visual Aid Suggestion\}\
- Sketch: Broken circle plane with varying El points.\
- Graph: Az (0-360\'b0) vs. practical El (1-4\'b0); random points.\
- Python Code Snippet:\
\\begin\{lstlisting\}\
import matplotlib.pyplot as plt\
az = range(0, 361, 30)\
el = [np.random.uniform(1,4) for _ in az]\
plt.plot(az, el, marker='o')\
plt.xlabel('Azimuth (\'b0)')\
plt.ylabel('Practical El (\'b0)')\
plt.title('Practical Horizon Variation')\
plt.grid(True)\
plt.show()\
\\end\{lstlisting\}\
\
\\subsection\{Retention Aid\}\
Mnemonic Recap: "Barriers Break Ideal Circle." Dual-code: Draw broken plane saying "Raised fence cuts view." Interleave: With ideal in 4.2. Multisensory: Discuss urban issues aloud. Spaced repetition: Review records weekly.\
\
Self-Quiz Questions:\
1. Multiple-Choice: Practical plane shape? (a) Flat circle, (b) Broken circle. Answer: (b).\
2. Fill-in: Average lock El __-__. Answer: 1-4\'b0.\
3. Application: Ideal t=15 min, practical lock 2\'b0 t_loss? Answer: ~1 min (estimate).\
4. What: Why urban challenge? Answer: Barriers hinder low El comm.\
5. Calculate: Real t if ideal 10 min, loss 2 min. Answer: 8 min.\
\
\\newpage\
\
\\section\{4.5 Real Communication Duration and Designed Horizon Plane Determination\}\
\
\\subsection\{Executive Summary\}\
Using measurements from 4.4, this subsection quantifies duration loss with time efficiency factor (Teff or \\( \\eta \\); ratio real/ideal, 80-95\\%), defining designed plane (intentional minimum El to avoid risks) at ~10\'b0 breaking point to ensure unbroken link, optimizing reliability.\
\
\\subsection\{Key Takeaways (80/20 Insights)\}\
\\begin\{itemize\}\
\\item \\textbf\{Time Efficiency Teff\}: \\( \\eta = t_\{\\text\{real\}\} / t_\{\\text\{ideal\}\} \\); 80-100\\% for Max-El>10\'b0, drops below; interleaves with practical in 4.4.\
\\item \\textbf\{Duration Loss \\( \\Delta t \\)\}: \\( \\Delta t = t_\{\\text\{ideal\}\} - t_\{\\text\{real\}\} \\); higher at low Max-El due to barriers.\
\\item \\textbf\{Breaking Point\}: At ~10\'b0 Max-El, Teff linear >80\\%; design plane above for safe comm.\
\\item \\textbf\{Designed Plane\}: Set at min El (5-30\'b0) to ensure unbroken link; NOAA (National Oceanic and Atmospheric Administration) uses 5\'b0.\
\\item \\textbf\{Implications\}: Higher Teff better system use; professionals analyze passes for design El.\
\\end\{itemize\}\
\
\\subsection\{Important Equations\}\
\\begin\{enumerate\}\
\\item \\textbf\{Teff\}: \\( \\eta = (t_\{\\text\{lock\}\} - t_\{\\text\{unlock\}\}) / (t_\{\\text\{AOS\}\} - t_\{\\text\{LOS\}\}) \\); ratio.\
\\item \\textbf\{Real t\}: \\( t_\{\\text\{real\}\} = t_\{\\text\{unlock\}\} - t_\{\\text\{lock\}\} \\); example: 14:40 vs. ideal 15:29 loss 0:49.\
\\item \\textbf\{\\( \\Delta t \\)\}: \\( \\Delta t = t_\{\\text\{ideal\}\} - t_\{\\text\{real\}\} \\); loss.\
\\item \\textbf\{Teff vs. Max-El\}: Graph shows break at 10\'b0; example: Max-El=86\'b0 Teff~95\\%.\
\\end\{enumerate\}\
\
\\subsection\{Supporting Details\}\
- Examples: 3000 MOST passes: low Max-El high loss; trades: High design El reliable but less t.\
- Applications: Optimize for science/SAR; cross-references power in 4.7.\
- Trades: Design El 5\'b0 max visibility vs. 30\'b0 min risk.\
\
\\subsection\{Simplified Analogy\}\
Teff is fuel efficiency: high Max-El like smooth highway (95\\%), low like bumpy road (drop). Verbalize aloud: "Smooth ride saves time, like high El cuts loss."\
\
\\subsection\{Visual Aid Suggestion\}\
- Sketch: Efficiency curve with break point.\
- Graph: Max-El vs. Teff (\\%); key: 10\'b0 break, 90\'b0 100\\%.\
- Python Code Snippet:\
\\begin\{lstlisting\}\
import matplotlib.pyplot as plt\
max_el = [5,10,20,40,60,80]\
teff = [60,80,85,90,95,100]\
plt.plot(max_el, teff, marker='o')\
plt.xlabel('Max-El (\'b0)')\
plt.ylabel('Teff (\\%)')\
plt.title('Teff vs. Max-El')\
plt.grid(True)\
plt.show()\
\\end\{lstlisting\}\
\
\\subsection\{Retention Aid\}\
Mnemonic Recap: "Teff High, Loss Low." Dual-code: Plot curve saying "Break at 10 saves win." Interleave: With 4.4 records. Multisensory: Calculate Teff aloud. Spaced repetition: Review graph daily.\
\
Self-Quiz Questions:\
1. Multiple-Choice: Teff break at? (a) 5\'b0, (b) 10\'b0. Answer: (b).\
2. Fill-in: Teff = \\( t_\{\\text\{real\}\} / ___ \\). Answer: \\( t_\{\\text\{ideal\}\} \\).\
3. Application: Ideal 15 min, Teff=90\\% \\( t_\{\\text\{real\}\} \\)? Answer: 13.5 min.\
4. What: Why design plane > break? Answer: Avoid barrier uncertainties.\
5. Calculate: \\( \\Delta t \\) if \\( t_\{\\text\{ideal\}\} = 10 \\) min, Teff=80\\%. Answer: 2 min.\
\
\\newpage\
\
\\section\{4.6 Ideal and Designed Horizon Plane Relation in Space\}\
\
\\subsection\{Executive Summary\}\
Building on 4.5, this subsection mathematically correlates ideal and designed planes, deriving widths (IHPW/DHPW; ideal/designed horizon plane width) and separation (LDHPW; layer distance) for varying El, enabling precise geometry for Starlink-like systems.\
\
\\subsection\{Key Takeaways (80/20 Insights)\}\
\\begin\{itemize\}\
\\item \\textbf\{Plane Widths\}: IHPW = \\( 2 d(0^\\circ) \\), DHPW = \\( 2 d(X^\\circ) \\); DHPW < IHPW; for H=550 km 40\'b0 DHPW=1240 km vs. IHPW=5406 km.\
\\item \\textbf\{Separation LDHPW\}: LDHPW = \\( d(X^\\circ) \\sin(90^\\circ - X^\\circ) \\); increases with X\'b0; interleaves with power savings in 4.7.\
\\item \\textbf\{Geometry\}: Designed plane parallel above ideal, up by LDHPW; cone base DHPW from user apex.\
\\item \\textbf\{Starlink Example\}: For shells (orbit groups at different H) 340-1110 km, X=25-40\'b0; lower H shorter widths.\
\\item \\textbf\{Implications\}: New parameters for LEO geometry; professionals calculate for coverage trades in Chapter 5.\
\\end\{itemize\}\
\
\\subsection\{Important Equations\}\
\\begin\{enumerate\}\
\\item \\textbf\{IHPW\}: \\( \\text\{IHPW\} = 2 \\sqrt\{H(H + 2R_E)\} \\); ideal width; example: H=550 km=5406 km.\
\\item \\textbf\{DHPW\}: \\( \\text\{DHPW\} = 2 d(X^\\circ) \\cos(90^\\circ - X^\\circ) \\); designed; example: X=40\'b0 H=550 km=1240 km.\
\\item \\textbf\{LDHPW\}: \\( \\text\{LDHPW\} = d(X^\\circ) \\sin(90^\\circ - X^\\circ) \\); separation; example: 520 km for above.\
\\item \\textbf\{Min d\}: \\( d_\{\\min\} = H \\) at 90\'b0; unchanged.\
\\end\{enumerate\}\
\
\\subsection\{Supporting Details\}\
- Examples: Table 4.4: H=340 km 30\'b0 LDHPW=316 km; trades: High X short DHPW but safe.\
- Applications: Starlink user sites; cross-references simulation in 4.3.\
- Trades: Low X max visibility vs. high reliability.\
\
\\subsection\{Simplified Analogy\}\
Planes are stacked pancakes: ideal bottom large, designed top smaller, separated by syrup layer (LDHPW). Verbalize aloud: "Thinner top pancake safer from edges, like high El avoids barriers."\
\
\\subsection\{Visual Aid Suggestion\}\
- Sketch: Parallel planes with IHPW, DHPW, LDHPW.\
- Graph: X (25-40\'b0) vs. DHPW (km) for H=550 km; key: 25\'b0=2045, 40\'b0=1240.\
- Python Code Snippet:\
\\begin\{lstlisting\}\
import matplotlib.pyplot as plt\
x = [25,30,35,40]\
dhpw = [2045,1718,1465,1240]\
plt.plot(x, dhpw, marker='o')\
plt.xlabel('Designed El (\'b0)')\
plt.ylabel('DHPW (km)')\
plt.title('DHPW vs. X for H=550 km')\
plt.grid(True)\
plt.show()\
\\end\{lstlisting\}\
\
\\subsection\{Retention Aid\}\
Mnemonic Recap: "Ideal Wide, Designed Narrow, Layer Between." Dual-code: Stack planes saying "Top short safe." Interleave: With 4.5 Teff. Multisensory: Measure aloud. Spaced repetition: Review table weekly.\
\
Self-Quiz Questions:\
1. Multiple-Choice: DHPW < ___? (a) IHPW, (b) LDHPW. Answer: (a).\
2. Fill-in: LDHPW = \\( d(X) ___ (90-X) \\). Answer: sin.\
3. Application: H=550 km X=30\'b0 DHPW? Answer: 1718 km (table).\
4. What: Why parallel planes? Answer: User fixed, designed shifts up.\
5. Calculate: IHPW for H=800 km (\\( R_E = 6371 \\)). Answer: ~6578 km (\\( 2\\sqrt\{H(H + 2R_E)\} \\)).\
\
\\newpage\
\
\\section\{4.7 Savings on Transmit Power through Designed Horizon Plane at LEO Satellite Ground Stations\}\
\
\\subsection\{Executive Summary\}\
From 4.6 geometry, this subsection calculates EIRP (Effective Isotropic Radiated Power; transmit power \'d7 antenna gain) savings (1-8 dB) by using designed plane to shorten max range, maintaining constant margin (extra signal strength), key for power-limited LEO satellites.\
\
\\subsection\{Key Takeaways (80/20 Insights)\}\
\\begin\{itemize\}\
\\item \\textbf\{EIRP Savings \\( \\Delta \\)EIRP\}: \\( \\Delta \\text\{EIRP\} = L_s(0^\\circ) - L_s(X^\\circ) = 20 \\log(d(0^\\circ)/d(X^\\circ)) \\); 1-8 dB for X=5-30\'b0; interleaves with S/N0 in 4.8.\
\\item \\textbf\{Constant Margin\}: Vary EIRP to compensate range; designed shortens max d, saves power.\
\\item \\textbf\{Altitude Effect\}: Savings decrease with H (e.g., H=600 km 8.44 dB at 30\'b0, H=1200 km 6.22 dB).\
\\item \\textbf\{Agile Transmitter\}: Satellite adjusts power per El; half power at 10\'b0 for H=800 km.\
\\item \\textbf\{Implications\}: Extends battery life; professionals "play" with X for trades.\
\\end\{itemize\}\
\
\\subsection\{Important Equations\}\
\\begin\{enumerate\}\
\\item \\textbf\{Downlink Margin DM\}: \\( \\text\{DM\} = (S/N)_\{\\text\{received\}\} - (S/N)_\{\\text\{required\}\} \\); positive for link.\
\\item \\textbf\{S/N0\}: \\( S/N_0 = \\text\{EIRP\} - L_s - L_0 + G/T_s + 228.6 \\); constant requires EIRP vary (\\( G/T_s \\) figure of merit, antenna gain/noise temp).\
\\item \\textbf\{\\( \\Delta \\)EIRP\}: \\( \\Delta \\text\{EIRP\} = 20 \\log(d_0 / d_X) \\); savings; example: X=30\'b0 H=800 km=7.47 dB.\
\\item \\textbf\{Range d\}: \\( d(\\epsilon_0) = R_E [\\sqrt\{(H/R_E +1)^2 - \\cos^2 \\epsilon_0\} - \\sin \\epsilon_0] \\); basis.\
\\end\{enumerate\}\
\
\\subsection\{Supporting Details\}\
- Examples: Table 4.5: 5\'b0 1.44 dB, 30\'b0 7.47 dB for H=800 km; trades: High X more savings but less t.\
- Applications: Nano sats (small satellites); cross-references agile payloads (adaptive transmitters).\
- Trades: Power save vs. coverage reduction.\
\
\\subsection\{Simplified Analogy\}\
Designed plane is shorter ladder: less effort (power) to climb same height. Verbalize aloud: "Shorter path saves battery, like designed El cuts EIRP."\
\
\\subsection\{Visual Aid Suggestion\}\
- Sketch: Bricks stacking savings per X.\
- Graph: X (5-30\'b0) vs. \\( \\Delta \\)EIRP (dB) for H=800 km; key: 30\'b0=7.47.\
- Python Code Snippet:\
\\begin\{lstlisting\}\
import matplotlib.pyplot as plt\
x = [5,10,15,20,25,30]\
deirp = [1.44,2.85,4.16,5.4,6.46,7.47]\
plt.bar(x, deirp)\
plt.xlabel('Designed El (\'b0)')\
plt.ylabel('\uc0\u916 EIRP (dB)')\
plt.title('Power Savings for H=800 km')\
plt.grid(True)\
plt.show()\
\\end\{lstlisting\}\
\
\\subsection\{Retention Aid\}\
Mnemonic Recap: "Delta EIRP Logs Range Ratio." Dual-code: Stack bricks saying "Higher X more save." Interleave: With 4.6 d. Multisensory: Compute savings aloud. Spaced repetition: Review table tomorrow.\
\
Self-Quiz Questions:\
1. Multiple-Choice: \\( \\Delta \\)EIRP from? (a) L_s diff, (b) G/T diff. Answer: (a).\
2. Fill-in: \\( \\Delta \\)EIRP = 20 log(___ / d_X). Answer: d_0.\
3. Application: H=800 km X=20\'b0 \\( \\Delta \\)EIRP? Answer: 5.4 dB (table).\
4. What: Why agile transmitter? Answer: Vary EIRP for constant margin.\
5. Calculate: 3 dB savings halves power? Answer: Yes (3 dB = factor of 2).\
\
\\newpage\
\
\\section\{4.8 Elevation Impact on Signal-to-Noise Density Ratio for LEO Satellite Ground Stations\}\
\
\\subsection\{Executive Summary\}\
Concluding chapter from 4.7, this subsection quantifies elevation's effect on S/N0 (signal-to-noise density ratio; signal power / noise density in dB-Hz), with higher El improving ratio due to shorter range, guiding adaptive modulation (changing data rate) for LEO links.\
\
\\subsection\{Key Takeaways (80/20 Insights)\}\
\\begin\{itemize\}\
\\item \\textbf\{S/N0 Variation\}: Peaks at 90\'b0 (short d), drops ~12 dB at 0\'b0; decreases with H.\
\\item \\textbf\{Free Space Loss L_s\}: \\( L_s = 32.45 + 20 \\log(d f) \\); main factor, 154-170 dB for LEO S-band (2 GHz range).\
\\item \\textbf\{Range Equation\}: S/N0 = EIRP - L_s - L_0 + G/T_s + 228.6; elevation drives L_s (\\( L_0 \\) other losses like atmosphere).\
\\item \\textbf\{Max \\( \\Delta \\)S/N0\}: 13.5 dB at H=600 km to 11.2 dB at 1200 km; compensate with EIRP.\
\\item \\textbf\{Implications\}: Higher El better performance; for constellations, higher orbits smoother S/N0.\
\\end\{itemize\}\
\
\\subsection\{Important Equations\}\
\\begin\{enumerate\}\
\\item \\textbf\{L_s\}: \\( L_s (\\text\{dB\}) = 20 \\log\\left( \\frac\{4\\pi d f\}\{c\} \\right) \\); example: d=3289 km f=2 GHz ~168.8 dB.\
\\item \\textbf\{S/N0\}: \\( S/N_0 (\\text\{dB-Hz\}) = \\text\{EIRP\} - L_s - L_0 + G/T_s + 228.6 \\); with EIRP=30 dBW G/T_s=15 ~70 at 90\'b0.\
\\item \\textbf\{\\( \\Delta \\)S/N0\}: \\( \\Delta S/N_0 = L_s(0^\\circ) - L_s(90^\\circ) \\); max diff; example: H=800 km 12.3 dB.\
\\item \\textbf\{G/T_s\}: \\( G/T_s = G - 10 \\log(T_\{\\text\{ant\}\} + T_\{\\text\{comp\}\}) \\); figure of merit; example: G=35 T=100 K =15 dB/K.\
\\end\{enumerate\}\
\
\\subsection\{Supporting Details\}\
- Examples: Table 4.6: 90\'b0 L_s=156.5 dB H=800 km, 0\'b0 168.8 dB; trades: Low El high loss vs. high El strong signal.\
- Applications: S-band LEO; cross-references rain in Chapter 2 adding L_0.\
- Trades: High H less \\( \\Delta \\) but weaker overall.\
\
\\subsection\{Simplified Analogy\}\
S/N0 is signal strength in noise storm: closer (high El) clearer call. Verbalize aloud: "Overhead close, loud and clear; horizon far, faint whisper."\
\
\\subsection\{Visual Aid Suggestion\}\
- Sketch: Path with d varying, L_s increasing down.\
- Graph: El (0-90\'b0) vs. S/N0 (dB-Hz) H=800 km; key: 0\'b0~58, 90\'b0~70.\
- Python Code Snippet:\
\\begin\{lstlisting\}\
import matplotlib.pyplot as plt\
el = range(0, 91, 10)\
sn0 = [58 + 12 * (e/90) for e in el]  # Approx\
plt.plot(el, sn0, marker='o')\
plt.xlabel('El (\'b0)')\
plt.ylabel('S/N0 (dB-Hz)')\
plt.title('S/N0 vs. El for H=800 km')\
plt.grid(True)\
plt.show()\
\\end\{lstlisting\}\
\
\\subsection\{Retention Aid\}\
Mnemonic Recap: "Signal High El Low Loss." Dual-code: Graph while saying "Up El up signal." Interleave: With 4.7 EIRP. Multisensory: Explain graph aloud. Spaced repetition: Review diff table weekly.\
\
Self-Quiz Questions:\
1. Multiple-Choice: S/N0 max at? (a) 0\'b0, (b) 90\'b0. Answer: (b).\
2. Fill-in: L_s ~20 log(___). Answer: d f.\
3. Application: H=1000 km \\( \\Delta \\)S/N0? Answer: 11.3 dB (table).\
4. What: Why compensate? Answer: Keep constant margin.\
5. Calculate: L_s at d=2000 km f=2 GHz (approx). Answer: ~162 dB.\
\
\\end\{document\}\
```}